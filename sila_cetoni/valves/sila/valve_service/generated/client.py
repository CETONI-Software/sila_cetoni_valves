# Generated by sila2.code_generator; sila2.__version__: 0.8.0
from __future__ import annotations

from typing import Set

from sila2.client import SilaClient
from sila2.framework import FullyQualifiedFeatureIdentifier

from .valvegatewayservice import InvalidValveIndex, ValveGatewayServiceClient, ValveGatewayServiceFeature
from .valvepositioncontroller import (
    ValveNotToggleable,
    ValvePositionControllerClient,
    ValvePositionControllerFeature,
    ValvePositionNotAvailable,
)


class Client(SilaClient):

    ValveGatewayService: ValveGatewayServiceClient

    ValvePositionController: ValvePositionControllerClient

    _expected_features: Set[FullyQualifiedFeatureIdentifier] = {
        FullyQualifiedFeatureIdentifier("org.silastandard/core/SiLAService/v1"),
        FullyQualifiedFeatureIdentifier("de.cetoni/valves/ValveGatewayService/v1"),
        FullyQualifiedFeatureIdentifier("de.cetoni/valves/ValvePositionController/v1"),
    }

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self._register_defined_execution_error_class(
            ValveGatewayServiceFeature.defined_execution_errors["InvalidValveIndex"], InvalidValveIndex
        )

        self._register_defined_execution_error_class(
            ValvePositionControllerFeature.defined_execution_errors["ValveNotToggleable"], ValveNotToggleable
        )

        self._register_defined_execution_error_class(
            ValvePositionControllerFeature.defined_execution_errors["ValvePositionNotAvailable"],
            ValvePositionNotAvailable,
        )
